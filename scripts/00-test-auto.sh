#!/bin/bash

set -e
set -u

# TYPE  DATABASE        USER            ADDRESS                 METHOD

tee /opt/bitnami/postgresql/conf/pg_hba.conf << EOF
host       all             				    all             		0.0.0.0/0       md5
host       all             				    all             		::1/128         md5
local      all             				    all                     			    md5
host       replication     				    all             		0.0.0.0/0       md5
host	   postgres		 				    all			 			0.0.0.0/0		md5
host 	   all							    postgres				0.0.0.0/0		md5
host	   $POSTGRESQL_DB_STAGING	 		$POSTGRESQL_USER_DDL 	0.0.0.0/0		md5
host	   $POSTGRESQL_DB_PRODUCTION 		$POSTGRESQL_USER_DDL	0.0.0.0/0		md5
host	   $POSTGRESQL_DB_STAGING	 		$POSTGRESQL_USER_DML 	0.0.0.0/0		md5
host	   $POSTGRESQL_DB_PRODUCTION 		$POSTGRESQL_USER_DML	0.0.0.0/0		md5
EOF

echo "  Creating DDL user"
	PGPASSWORD=$POSTGRESQL_POSTGRES_PASSWORD psql -v ON_ERROR_STOP=1 --username postgres <<-EOSQL
		CREATE USER $POSTGRESQL_USER_DDL WITH PASSWORD '$POSTGRESQL_PASSWORD_DDL';
EOSQL

echo "  Creating DML user"
	PGPASSWORD=$POSTGRESQL_POSTGRES_PASSWORD psql -v ON_ERROR_STOP=1 --username postgres <<-EOSQL
		CREATE USER $POSTGRESQL_USER_DML WITH PASSWORD '$POSTGRESQL_PASSWORD_DML';
EOSQL

function create_database() {
	local database=$1
	echo "  Creating database '$database'"
	PGPASSWORD=$POSTGRESQL_POSTGRES_PASSWORD psql -v ON_ERROR_STOP=1 --username postgres <<-EOSQL
		CREATE DATABASE $database;
		GRANT ALL PRIVILEGES ON DATABASE $database TO $POSTGRESQL_USER_DDL;
EOSQL
}

if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
	echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
	for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
		create_database $db
	done
	echo "Multiple databases created"
fi

echo " Creating DDL Permissons on Database Staging"
	PGPASSWORD=$POSTGRESQL_PASSWORD_DDL psql -v ON_ERROR_STOP=1 --username $POSTGRESQL_USER_DDL $POSTGRESQL_DB_STAGING <<-EOSQL
		REVOKE ALL ON DATABASE $POSTGRESQL_DB_STAGING FROM $POSTGRESQL_USER_DDL;
		GRANT CONNECT ON DATABASE $POSTGRESQL_DB_STAGING TO $POSTGRESQL_USER_DDL;
		GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DB_STAGING TO $POSTGRESQL_USER_DDL;
		REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA public FROM $POSTGRESQL_USER_DDL;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON TABLES FROM $POSTGRESQL_USER_DDL;
		ALTER DEFAULT PRIVILEGES FOR ROLE $POSTGRESQL_USER_DDL REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON TABLES FROM $POSTGRESQL_USER_DDL;
		GRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO $POSTGRESQL_USER_DML;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE ON SEQUENCES TO $POSTGRESQL_USER_DML;
EOSQL

echo " Creating DML Permissons on Database Staging "
	PGPASSWORD=$POSTGRESQL_PASSWORD_DDL psql -v ON_ERROR_STOP=1 --username $POSTGRESQL_USER_DDL $POSTGRESQL_DB_STAGING <<-EOSQL
		REVOKE ALL ON DATABASE $POSTGRESQL_DB_STAGING FROM $POSTGRESQL_USER_DML;
		GRANT CONNECT ON DATABASE $POSTGRESQL_DB_STAGING TO $POSTGRESQL_USER_DML;
		GRANT USAGE ON SCHEMA public TO $POSTGRESQL_USER_DML;
		GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO $POSTGRESQL_USER_DML;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO $POSTGRESQL_USER_DML;
EOSQL

echo " Creating DDL Permissons on Database Production"
	PGPASSWORD=$POSTGRESQL_PASSWORD_DDL psql -v ON_ERROR_STOP=1 --username $POSTGRESQL_USER_DDL $POSTGRESQL_DB_PRODUCTION <<-EOSQL
		REVOKE ALL ON DATABASE $POSTGRESQL_DB_PRODUCTION FROM $POSTGRESQL_USER_DDL;
		GRANT CONNECT ON DATABASE $POSTGRESQL_DB_PRODUCTION TO $POSTGRESQL_USER_DDL;
		GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DB_PRODUCTION TO $POSTGRESQL_USER_DDL;
		REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA public FROM $POSTGRESQL_USER_DDL;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON TABLES FROM $POSTGRESQL_USER_DDL;
		ALTER DEFAULT PRIVILEGES FOR ROLE $POSTGRESQL_USER_DDL REVOKE SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON TABLES FROM $POSTGRESQL_USER_DDL;
		GRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO $POSTGRESQL_USER_DML;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE ON SEQUENCES TO $POSTGRESQL_USER_DML;
EOSQL

echo " Creating DML Permissons on Database Production "
	PGPASSWORD=$POSTGRESQL_PASSWORD_DDL psql -v ON_ERROR_STOP=1 --username $POSTGRESQL_USER_DDL $POSTGRESQL_DB_PRODUCTION <<-EOSQL
		REVOKE ALL ON DATABASE $POSTGRESQL_DB_PRODUCTION FROM $POSTGRESQL_USER_DML;
		GRANT CONNECT ON DATABASE $POSTGRESQL_DB_PRODUCTION TO $POSTGRESQL_USER_DML;
		GRANT USAGE ON SCHEMA public TO $POSTGRESQL_USER_DML;
		GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO $POSTGRESQL_USER_DML;
		ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO $POSTGRESQL_USER_DML;
EOSQL


### DML ACCESS
## CREATE USER dml WITH PASSWORD 'your_password';
## \connect db_production
## PGPASSWORD=ddl_password psql -U postgres db_production 

### Run postgres user
## REVOKE ALL ON DATABASE db_production FROM dml;
## GRANT CONNECT ON DATABASE db_production TO dml;
## GRANT USAGE ON SCHEMA public TO dml;
## GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO dml;
## ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO dml;

### DDL ACCESS
## CREATE USER ddl WITH PASSWORD 'your_password';
## \connect db_production
## PGPASSWORD=ddl_password psql -U postgres db_production 

### Run postgres user
## REVOKE ALL ON DATABASE db_production FROM ddl;
## GRANT CONNECT ON DATABASE db_production TO ddl;
## GRANT ALL PRIVILEGES ON DATABASE db_production TO ddl;
## REVOKE SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public FROM ddl;
## ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE SELECT, INSERT, UPDATE, DELETE ON TABLES FROM ddl;
## ALTER DEFAULT PRIVILEGES FOR ROLE ddl REVOKE SELECT, INSERT, UPDATE, DELETE ON TABLES FROM ddl;

## Dilakukan setelah ada tabel schema_version
## GRANT SELECT, INSERT ON TABLE schema_version TO $POSTGRESQL_USER_DDL;

## GRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO hotelize_dml;
## ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE ON SEQUENCES TO hotelize_dml;
